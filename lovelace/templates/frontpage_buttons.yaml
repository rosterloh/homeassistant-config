# lovelace_gen

type: vertical-stack
cards:
  - type: conditional
    conditions:
      - state: "on"
        entity: input_boolean.dummy_1
    card:
      type: custom:button-card
      style: |
        ha-card {
          padding-top: -40px;
        }
      entity: input_boolean.dummy_1
      styles:
        card:
          - height: 0px
  - type: conditional
    conditions:
      - state: "on"
        entity: input_boolean.button_alarm_{{ column }}
    card:
      !include
      - '../templates/button_badge.yaml'
      - name: "[[[ return `${states['input_text.name_alarm'].state}` ]]]"
        label: "[[[ return `${states['input_text.name_alarm_label'].state}` ]]]"
        icon: "[[[ return `${states['input_text.icon_alarm'].state}` ]]]"
        navigation_path: /lovelace/alarm
        notification: "[[[ if (states[`${states['input_text.sensor_alarm'].state}`].state == 0) return '&nbsp'; else return `${states[`${states['input_text.sensor_alarm'].state}`].state}`; ]]]"
        background_color: "[[[ if (states[`${states['input_text.sensor_alarm'].state}`].state == 0) return 'rgba(0,0,0,0.0)'; else return 'var(--paper-item-icon-color)'; ]]]"
  - type: conditional
    conditions:
      - state: "on"
        entity: input_boolean.button_automation_{{ column }}
    card:
      !include
      - '../templates/button_badge.yaml'
      - name: "[[[ return `${states['input_text.name_automation'].state}` ]]]"
        label: "[[[ return `${states['input_text.name_automation_label'].state}` ]]]"
        icon: "[[[ return `${states['input_text.icon_automation'].state}` ]]]"
        navigation_path: /lovelace/automations
        notification: "[[[ if (states[`${states['input_text.sensor_automation'].state}`].state == 0) return '&nbsp'; else return `${states[`${states['input_text.sensor_automation'].state}`].state}`; ]]]"
        background_color: "[[[ if (states[`${states['input_text.sensor_automation'].state}`].state == 0) return 'rgba(0,0,0,0.0)'; else return 'var(--paper-item-icon-color)'; ]]]"  
  - type: conditional
    conditions:
      - state: "on"
        entity: input_boolean.button_battery_{{ column }}
    card:
      !include
      - '../templates/button_badge.yaml'
      - name: "[[[ return `${states['input_text.name_battery'].state}` ]]]"
        label: "[[[ return `${states['input_text.name_battery_label'].state}` ]]]"
        icon: "[[[ return `${states['input_text.icon_battery'].state}` ]]]"
        navigation_path: /lovelace/battery
        notification: "[[[ if (states[`${states['input_text.sensor_battery'].state}`].state == 0) return '&nbsp'; else return `${states[`${states['input_text.sensor_battery'].state}`].state}`; ]]]"
        background_color: "[[[ if (states[`${states['input_text.sensor_battery'].state}`].state == 0) return 'rgba(0,0,0,0.0)'; else return 'var(--paper-item-icon-color)'; ]]]"    
  - type: conditional
    conditions:
      - state: "on"
        entity: input_boolean.button_calendar_{{ column }}
    card:
      !include
      - '../templates/button_badge.yaml'
      - name: "[[[ return `${states['input_text.name_calendar'].state}` ]]]"
        label: "[[[ return `${states['input_text.name_calendar_label'].state}` ]]]"
        icon: "[[[ return `${states['input_text.icon_calendar'].state}` ]]]"
        navigation_path: /lovelace/calendar
        notification: "[[[ if (states[`${states['input_text.sensor_calendar'].state}`].state == 0) return '&nbsp'; else return `${states[`${states['input_text.sensor_calendar'].state}`].state}`; ]]]"
        background_color: "[[[ if (states[`${states['input_text.sensor_calendar'].state}`].state == 0) return 'rgba(0,0,0,0.0)'; else return 'var(--paper-item-icon-color)'; ]]]"      
  - type: conditional
    conditions:
      - state: "on"
        entity: input_boolean.button_cleaning_{{ column }}
    card:
      !include
      - '../templates/button_badge.yaml'
      - name: "[[[ return `${states['input_text.name_cleaning'].state}` ]]]"
        label: "[[[ return `${states['input_text.name_cleaning_label'].state}` ]]]"
        icon: "[[[ return `${states['input_text.icon_cleaning'].state}` ]]]"
        navigation_path: /lovelace/cleaning
        notification: "[[[ if (states[`${states['input_text.sensor_cleaning'].state}`].state == 0) return '&nbsp'; else return `${states[`${states['input_text.sensor_cleaning'].state}`].state}`; ]]]"
        background_color: "[[[ if (states[`${states['input_text.sensor_cleaning'].state}`].state == 0) return 'rgba(0,0,0,0.0)'; else return 'var(--paper-item-icon-color)'; ]]]"  
  - type: conditional
    conditions:
      - state: "on"
        entity: input_boolean.button_climate_{{ column }}
    card:
      !include
      - '../templates/button_badge.yaml'
      - name: "[[[ return `${states['input_text.name_climate'].state}` ]]]"
        label: "[[[ return `${states['input_text.name_climate_label'].state}` ]]]"
        icon: "[[[ return `${states['input_text.icon_climate'].state}` ]]]"
        navigation_path: /lovelace/climate
        notification: "[[[ if (states[`${states['input_text.sensor_climate'].state}`].state == 0) return '&nbsp'; else return `${states[`${states['input_text.sensor_climate'].state}`].state}`; ]]]"
        background_color: "[[[ if (states[`${states['input_text.sensor_climate'].state}`].state == 0) return 'rgba(0,0,0,0.0)'; else return 'var(--paper-item-icon-color)'; ]]]"     
  - type: conditional
    conditions:
      - state: "on"
        entity: input_boolean.button_computer_{{ column }}
    card:
      !include
      - '../templates/button_badge.yaml'
      - name: "[[[ return `${states['input_text.name_computer'].state}` ]]]"
        label: "[[[ return `${states['input_text.name_computer_label'].state}` ]]]"
        icon: "[[[ return `${states['input_text.icon_computer'].state}` ]]]"
        navigation_path: /lovelace/computers
        notification: "[[[ if (states[`${states['input_text.sensor_computer'].state}`].state == 0) return '&nbsp'; else return `${states[`${states['input_text.sensor_computer'].state}`].state}`; ]]]"
        background_color: "[[[ if (states[`${states['input_text.sensor_computer'].state}`].state == 0) return 'rgba(0,0,0,0.0)'; else return 'var(--paper-item-icon-color)'; ]]]" 
  - type: conditional
    conditions:
      - state: "on"
        entity: input_boolean.button_device_{{ column }}
    card:
      !include
      - '../templates/button_badge.yaml'
      - name: "[[[ return `${states['input_text.name_device'].state}` ]]]"
        label: "[[[ return `${states['input_text.name_device_label'].state}` ]]]"
        icon: "[[[ return `${states['input_text.icon_device'].state}` ]]]"
        navigation_path: /lovelace/devices
        notification: "[[[ if (states[`${states['input_text.sensor_device'].state}`].state == 0) return '&nbsp'; else return `${states[`${states['input_text.sensor_device'].state}`].state}`; ]]]"
        background_color: "[[[ if (states[`${states['input_text.sensor_device'].state}`].state == 0) return 'rgba(0,0,0,0.0)'; else return 'var(--paper-item-icon-color)'; ]]]"    
  - type: conditional
    conditions:
      - state: "on"
        entity: input_boolean.button_energy_{{ column }}
    card:
      !include
      - '../templates/button_badge.yaml'
      - name: "[[[ return `${states['input_text.name_energy'].state}` ]]]"
        label: "[[[ return `${states['input_text.name_energy_label'].state}` ]]]"
        icon: "[[[ return `${states['input_text.icon_energy'].state}` ]]]"
        navigation_path: /lovelace/energy
        notification: "[[[ if (states[`${states['input_text.sensor_energy'].state}`].state == 0) return '&nbsp'; else return `${states[`${states['input_text.sensor_energy'].state}`].state}`; ]]]"
        background_color: "[[[ if (states[`${states['input_text.sensor_energy'].state}`].state == 0) return 'rgba(0,0,0,0.0)'; else return 'var(--paper-item-icon-color)'; ]]]"    
  - type: conditional
    conditions:
      - state: "on"
        entity: input_boolean.button_floorplan_{{ column }}
    card:
      !include 
      - '../templates/button_badge.yaml'
      - name: "[[[ return `${states['input_text.name_floorplan'].state}` ]]]"
        label: "[[[ return `${states['input_text.name_floorplan_label'].state}` ]]]"
        icon: "[[[ return `${states['input_text.icon_floorplan'].state}` ]]]"
        navigation_path: /lovelace/floorplan
        notification: "[[[ if (states[`${states['input_text.sensor_floorplan'].state}`].state == 0) return '&nbsp'; else return `${states[`${states['input_text.sensor_floorplan'].state}`].state}`; ]]]"
        background_color: "[[[ if (states[`${states['input_text.sensor_floorplan'].state}`].state == 0) return 'rgba(0,0,0,0.0)'; else return 'var(--paper-item-icon-color)'; ]]]"       
  - type: conditional
    conditions:
      - state: "on"
        entity: input_boolean.button_homeassistant_{{ column }}
    card:
      !include 
      - '../templates/button_nav.yaml'
      - name: HA
        label: "[[[ return `${states['input_text.name_header_settings'].state}` ]]]"
        icon: mdi:tools
        navigation_path: /lovelace/ha_settings
        margin_right: 40px
  - type: conditional
    conditions:
      - state: "on"
        entity: input_boolean.button_settings_{{ column }}
    card:
      !include 
      - '../templates/button_nav.yaml'
      - name: HKI
        label: "[[[ return `${states['input_text.name_header_settings'].state}` ]]]"
        icon: mdi:tools
        navigation_path: /lovelace/settings
        margin_right: 40px
  - type: conditional
    conditions:
      - state: "on"
        entity: input_boolean.button_laundry_{{ column }}
    card:
      !include 
      - '../templates/button_badge.yaml'
      - name: "[[[ return `${states['input_text.name_laundry'].state}` ]]]"
        label: "[[[ return `${states['input_text.name_laundry_label'].state}` ]]]"
        icon: "[[[ return `${states['input_text.icon_laundry'].state}` ]]]"
        navigation_path: /lovelace/laundry
        notification: "[[[ if (states[`${states['input_text.sensor_laundry'].state}`].state == 0) return '&nbsp'; else return `${states[`${states['input_text.sensor_laundry'].state}`].state}`; ]]]"
        background_color: "[[[ if (states[`${states['input_text.sensor_laundry'].state}`].state == 0) return 'rgba(0,0,0,0.0)'; else return 'var(--paper-item-icon-color)'; ]]]"       
  - type: conditional
    conditions:
      - state: "on"
        entity: input_boolean.button_light_{{ column }}
    card:
      !include
      - '../templates/button_badge.yaml'
      - name: "[[[ return `${states['input_text.name_light'].state}` ]]]"
        label: "[[[ return `${states['input_text.name_light_label'].state}` ]]]"
        icon: "[[[ return `${states['input_text.icon_light'].state}` ]]]"
        navigation_path: /lovelace/lights
        notification: "[[[ if (states[`${states['input_text.sensor_light'].state}`].state == 0) return '&nbsp'; else return `${states[`${states['input_text.sensor_light'].state}`].state}`; ]]]"
        background_color: "[[[ if (states[`${states['input_text.sensor_light'].state}`].state == 0) return 'rgba(0,0,0,0.0)'; else return 'var(--paper-item-icon-color)'; ]]]"   
  - type: conditional
    conditions:
      - state: "on"
        entity: input_boolean.button_location_{{ column }}
    card:
      !include
      - '../templates/button_badge.yaml'
      - name: "[[[ return `${states['input_text.name_location'].state}` ]]]"
        label: "[[[ return `${states['input_text.name_location_label'].state}` ]]]"
        icon: "[[[ return `${states['input_text.icon_location'].state}` ]]]"
        navigation_path: /lovelace/location
        notification: "[[[ if (states[`${states['input_text.sensor_location'].state}`].state == 0) return '&nbsp'; else return `${states[`${states['input_text.sensor_location'].state}`].state}`; ]]]"
        background_color: "[[[ if (states[`${states['input_text.sensor_location'].state}`].state == 0) return 'rgba(0,0,0,0.0)'; else return 'var(--paper-item-icon-color)'; ]]]"   
  - type: conditional
    conditions:
      - state: "on"
        entity: input_boolean.button_media_{{ column }}
    card:
      !include 
      - '../templates/button_badge.yaml'
      - name: "[[[ return `${states['input_text.name_media'].state}` ]]]"
        label: "[[[ return `${states['input_text.name_media_label'].state}` ]]]"
        icon: "[[[ return `${states['input_text.icon_media'].state}` ]]]"
        navigation_path: /lovelace/media
        notification: "[[[ if (states[`${states['input_text.sensor_media'].state}`].state == 0) return '&nbsp'; else return `${states[`${states['input_text.sensor_media'].state}`].state}`; ]]]"
        background_color: "[[[ if (states[`${states['input_text.sensor_media'].state}`].state == 0) return 'rgba(0,0,0,0.0)'; else return 'var(--paper-item-icon-color)'; ]]]"  
  - type: conditional
    conditions:
      - state: "on"
        entity: input_boolean.button_remote_{{ column }}
    card:
      !include
      - '../templates/button_badge.yaml'
      - name: "[[[ return `${states['input_text.name_remote'].state}` ]]]"
        label: "[[[ return `${states['input_text.name_remote_label'].state}` ]]]"
        icon: "[[[ return `${states['input_text.icon_remote'].state}` ]]]"
        navigation_path: /lovelace/remote
        notification: "[[[ if (states[`${states['input_text.sensor_remote'].state}`].state == 0) return '&nbsp'; else return `${states[`${states['input_text.sensor_remote'].state}`].state}`; ]]]"
        background_color: "[[[ if (states[`${states['input_text.sensor_remote'].state}`].state == 0) return 'rgba(0,0,0,0.0)'; else return 'var(--paper-item-icon-color)'; ]]]"  
  - type: conditional
    conditions:
      - state: "on"
        entity: input_boolean.button_scene_{{ column }}
    card:
      !include
      - '../templates/button_badge.yaml'
      - name: "[[[ return `${states['input_text.name_scene'].state}` ]]]"
        label: "[[[ return `${states['input_text.name_scene_label'].state}` ]]]"
        icon: "[[[ return `${states['input_text.icon_scene'].state}` ]]]"
        navigation_path: /lovelace/scenes
        notification: "[[[ if (states[`${states['input_text.sensor_scene'].state}`].state == 0) return '&nbsp'; else return `${states[`${states['input_text.sensor_scene'].state}`].state}`; ]]]"
        background_color: "[[[ if (states[`${states['input_text.sensor_scene'].state}`].state == 0) return 'rgba(0,0,0,0.0)'; else return 'var(--paper-item-icon-color)'; ]]]"             
  - type: conditional
    conditions:
      - state: "on"
        entity: input_boolean.button_security_{{ column }}
    card:
      !include
      - '../templates/button_badge.yaml'
      - name: "[[[ return `${states['input_text.name_security'].state}` ]]]"
        label: "[[[ return `${states['input_text.name_security_label'].state}` ]]]"
        icon: "[[[ return `${states['input_text.icon_security'].state}` ]]]"
        navigation_path: /lovelace/security
        notification: "[[[ if (states[`${states['input_text.sensor_security'].state}`].state == 0) return '&nbsp'; else return `${states[`${states['input_text.sensor_security'].state}`].state}`; ]]]"
        background_color: "[[[ if (states[`${states['input_text.sensor_security'].state}`].state == 0) return 'rgba(0,0,0,0.0)'; else return 'var(--paper-item-icon-color)'; ]]]"        
  - type: conditional
    conditions:
      - state: "on"
        entity: input_boolean.button_system_{{ column }}
    card:
      !include 
      - '../templates/button_badge.yaml'
      - name: "[[[ return `${states['input_text.name_system'].state}` ]]]"
        label: "[[[ return `${states['input_text.name_system_label'].state}` ]]]"
        icon: "[[[ return `${states['input_text.icon_system'].state}` ]]]"
        navigation_path: /lovelace/system
        notification: "[[[ if (states[`${states['input_text.sensor_system'].state}`].state == 0) return '&nbsp'; else return `${states[`${states['input_text.sensor_system'].state}`].state}`; ]]]"
        background_color: "[[[ if (states[`${states['input_text.sensor_system'].state}`].state == 0) return 'rgba(0,0,0,0.0)'; else return 'var(--paper-item-icon-color)'; ]]]"  
  - type: conditional
    conditions:
      - state: "on"
        entity: input_boolean.button_traffic_{{ column }}
    card:
      !include 
      - '../templates/button_badge.yaml'
      - name: "[[[ return `${states['input_text.name_traffic'].state}` ]]]"
        label: "[[[ return `${states['input_text.name_traffic_label'].state}` ]]]"
        icon: "[[[ return `${states['input_text.icon_traffic'].state}` ]]]"
        navigation_path: /lovelace/traffic_information
        notification: "[[[ if (states[`${states['input_text.sensor_traffic'].state}`].state == 0) return '&nbsp'; else return `${states[`${states['input_text.sensor_traffic'].state}`].state}`; ]]]"
        background_color: "[[[ if (states[`${states['input_text.sensor_traffic'].state}`].state == 0) return 'rgba(0,0,0,0.0)'; else return 'var(--paper-item-icon-color)'; ]]]"       
  - type: conditional
    conditions:
      - state: "on"
        entity: input_boolean.button_vacuum_{{ column }}
    card:
      !include
      - '../templates/button_badge.yaml'
      - name: "[[[ return `${states['input_text.name_vacuum'].state}` ]]]"
        label: "[[[ return `${states['input_text.name_vacuum_label'].state}` ]]]"
        icon: "[[[ return `${states['input_text.icon_vacuum'].state}` ]]]"
        navigation_path: /lovelace/vacuum
        notification: "[[[ if (states[`${states['input_text.sensor_vacuum'].state}`].state == 0) return '&nbsp'; else return `${states[`${states['input_text.sensor_vacuum'].state}`].state}`; ]]]"
        background_color: "[[[ if (states[`${states['input_text.sensor_vacuum'].state}`].state == 0) return 'rgba(0,0,0,0.0)'; else return 'var(--paper-item-icon-color)'; ]]]" 
  - type: conditional
    conditions:
      - state: "on"
        entity: input_boolean.button_weather_{{ column }}
    card:
      !include 
      - '../templates/button_badge.yaml'
      - name: "[[[ return `${states['input_text.name_weather'].state}` ]]]"
        label: "[[[ return `${states['input_text.name_weather_label'].state}` ]]]"
        icon: "[[[ return `${states['input_text.icon_weather'].state}` ]]]"
        navigation_path: /lovelace/weather
        notification: "[[[ if (states[`${states['input_text.sensor_weather'].state}`].state == 0) return '&nbsp'; else return `${states[`${states['input_text.sensor_weather'].state}`].state}`; ]]]"
        background_color: "[[[ if (states[`${states['input_text.sensor_weather'].state}`].state == 0) return 'rgba(0,0,0,0.0)'; else return 'var(--paper-item-icon-color)'; ]]]"
  - type: conditional
    conditions:
      - state: "on"
        entity: input_boolean.button_custom_a_{{ column }}
    card:
      !include
      - '../templates/button_badge.yaml'
      - name: "[[[ return `${states['input_text.name_button_custom_a'].state}` ]]]"
        label: "[[[ return `${states['input_text.name_button_custom_a_label'].state}` ]]]"
        icon: "[[[ return `${states['input_text.icon_button_custom_a'].state}` ]]]"
        navigation_path: /lovelace/custom_a
        notification: "[[[ if (states[`${states['input_text.sensor_button_custom_a'].state}`].state == 0) return '&nbsp'; else return `${states[`${states['input_text.sensor_button_custom_a'].state}`].state}`; ]]]"
        background_color: "[[[ if (states[`${states['input_text.sensor_button_custom_a'].state}`].state == 0) return 'rgba(0,0,0,0.0)'; else return 'var(--paper-item-icon-color)'; ]]]"
  - type: conditional
    conditions:
      - state: "on"
        entity: input_boolean.button_custom_b_{{ column }}
    card:
      !include
      - '../templates/button_badge.yaml'
      - name: "[[[ return `${states['input_text.name_button_custom_b'].state}` ]]]"
        label: "[[[ return `${states['input_text.name_button_custom_b_label'].state}` ]]]"
        icon: "[[[ return `${states['input_text.icon_button_custom_b'].state}` ]]]"
        navigation_path: /lovelace/custom_b
        notification: "[[[ if (states[`${states['input_text.sensor_button_custom_b'].state}`].state == 0) return '&nbsp'; else return `${states[`${states['input_text.sensor_button_custom_b'].state}`].state}`; ]]]"
        background_color: "[[[ if (states[`${states['input_text.sensor_button_custom_b'].state}`].state == 0) return 'rgba(0,0,0,0.0)'; else return 'var(--paper-item-icon-color)'; ]]]"
  - type: conditional
    conditions:
      - state: "on"
        entity: input_boolean.button_custom_c_{{ column }}
    card:
      !include
      - '../templates/button_badge.yaml'
      - name: "[[[ return `${states['input_text.name_button_custom_c'].state}` ]]]"
        label: "[[[ return `${states['input_text.name_button_custom_c_label'].state}` ]]]"
        icon: "[[[ return `${states['input_text.icon_button_custom_c'].state}` ]]]"
        navigation_path: /lovelace/custom_c
        notification: "[[[ if (states[`${states['input_text.sensor_button_custom_c'].state}`].state == 0) return '&nbsp'; else return `${states[`${states['input_text.sensor_button_custom_c'].state}`].state}`; ]]]"
        background_color: "[[[ if (states[`${states['input_text.sensor_button_custom_c'].state}`].state == 0) return 'rgba(0,0,0,0.0)'; else return 'var(--paper-item-icon-color)'; ]]]"
  - type: conditional
    conditions:
      - state: "on"
        entity: input_boolean.button_custom_d_{{ column }}
    card:
      !include
      - '../templates/button_badge.yaml'
      - name: "[[[ return `${states['input_text.name_button_custom_d'].state}` ]]]"
        label: "[[[ return `${states['input_text.name_button_custom_d_label'].state}` ]]]"
        icon: "[[[ return `${states['input_text.icon_button_custom_d'].state}` ]]]"
        navigation_path: /lovelace/custom_d
        notification: "[[[ if (states[`${states['input_text.sensor_button_custom_d'].state}`].state == 0) return '&nbsp'; else return `${states[`${states['input_text.sensor_button_custom_d'].state}`].state}`; ]]]"
        background_color: "[[[ if (states[`${states['input_text.sensor_button_custom_d'].state}`].state == 0) return 'rgba(0,0,0,0.0)'; else return 'var(--paper-item-icon-color)'; ]]]"
  - type: conditional
    conditions:
      - state: "on"
        entity: input_boolean.button_custom_e_{{ column }}
    card:
      !include
      - '../templates/button_custom_user.yaml'
      - name: "[[[ return `${states['input_text.name_button_custom_e'].state}` ]]]"
        label: "[[[ return `${states['input_text.name_button_custom_e_label'].state}` ]]]"
        icon: "[[[ return `${states['input_text.icon_button_custom_e'].state}` ]]]"
        toggle_entity: "[[[ return `${states['input_text.entity_button_custom_e'].state}` ]]]"
        notification: "[[[ if (states[`${states['input_text.sensor_button_custom_e'].state}`].state == 0) return '&nbsp'; else return `${states[`${states['input_text.sensor_button_custom_e'].state}`].state}`; ]]]"
        background_color: "[[[ if (states[`${states['input_text.sensor_button_custom_e'].state}`].state == 0) return 'rgba(0,0,0,0.0)'; else return 'var(--paper-item-icon-color)'; ]]]"
  - type: conditional
    conditions:
      - state: "on"
        entity: input_boolean.button_custom_f_{{ column }}
    card:
      !include
      - '../templates/button_custom_user.yaml'
      - name: "[[[ return `${states['input_text.name_button_custom_f'].state}` ]]]"
        label: "[[[ return `${states['input_text.name_button_custom_f_label'].state}` ]]]"
        icon: "[[[ return `${states['input_text.icon_button_custom_f'].state}` ]]]"
        toggle_entity: "[[[ return `${states['input_text.entity_button_custom_f'].state}` ]]]"
        notification: "[[[ if (states[`${states['input_text.sensor_button_custom_f'].state}`].state == 0) return '&nbsp'; else return `${states[`${states['input_text.sensor_button_custom_f'].state}`].state}`; ]]]"
        background_color: "[[[ if (states[`${states['input_text.sensor_button_custom_f'].state}`].state == 0) return 'rgba(0,0,0,0.0)'; else return 'var(--paper-item-icon-color)'; ]]]"
  - type: conditional
    conditions:
      - state: "on"
        entity: input_boolean.button_custom_g_{{ column }}
    card:
      !include
      - '../templates/button_custom_user.yaml'
      - name: "[[[ return `${states['input_text.name_button_custom_g'].state}` ]]]"
        label: "[[[ return `${states['input_text.name_button_custom_g_label'].state}` ]]]"
        icon: "[[[ return `${states['input_text.icon_button_custom_g'].state}` ]]]"
        toggle_entity: "[[[ return `${states['input_text.entity_button_custom_g'].state}` ]]]"
        notification: "[[[ if (states[`${states['input_text.sensor_button_custom_g'].state}`].state == 0) return '&nbsp'; else return `${states[`${states['input_text.sensor_button_custom_g'].state}`].state}`; ]]]"
        background_color: "[[[ if (states[`${states['input_text.sensor_button_custom_g'].state}`].state == 0) return 'rgba(0,0,0,0.0)'; else return 'var(--paper-item-icon-color)'; ]]]"
  - type: conditional
    conditions:
      - state: "on"
        entity: input_boolean.button_custom_h_{{ column }}
    card:
      !include
      - '../templates/button_custom_user.yaml'
      - name: "[[[ return `${states['input_text.name_button_custom_h'].state}` ]]]"
        label: "[[[ return `${states['input_text.name_button_custom_h_label'].state}` ]]]"
        icon: "[[[ return `${states['input_text.icon_button_custom_h'].state}` ]]]"
        toggle_entity: "[[[ return `${states['input_text.entity_button_custom_h'].state}` ]]]"
        notification: "[[[ if (states[`${states['input_text.sensor_button_custom_h'].state}`].state == 0) return '&nbsp'; else return `${states[`${states['input_text.sensor_button_custom_h'].state}`].state}`; ]]]"
        background_color: "[[[ if (states[`${states['input_text.sensor_button_custom_h'].state}`].state == 0) return 'rgba(0,0,0,0.0)'; else return 'var(--paper-item-icon-color)'; ]]]"